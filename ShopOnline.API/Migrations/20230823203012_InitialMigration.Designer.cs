// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOnline.API.Data;

#nullable disable

namespace ShopOnline.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230823203012_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopOnline.API.Entites.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SHIRT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BASIC"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SHIRT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "PRTINED"
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.FitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("FitTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "REGULAR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "OVERSIZE"
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Intelligent Wooden Soap",
                            Price = 806.46m,
                            Qty = 924
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Sleek Plastic Bike",
                            Price = 302.67m,
                            Qty = 935
                        },
                        new
                        {
                            Id = 3,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Practical Rubber Shoes",
                            Price = 453.74m,
                            Qty = 366
                        },
                        new
                        {
                            Id = 4,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Practical Soft Bacon",
                            Price = 207.08m,
                            Qty = 618
                        },
                        new
                        {
                            Id = 5,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Sleek Cotton Computer",
                            Price = 885.47m,
                            Qty = 825
                        },
                        new
                        {
                            Id = 6,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Small Plastic Sausages",
                            Price = 802.04m,
                            Qty = 578
                        },
                        new
                        {
                            Id = 7,
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Name = "Handmade Frozen Gloves",
                            Price = 181.85m,
                            Qty = 986
                        },
                        new
                        {
                            Id = 8,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Tasty Concrete Bacon",
                            Price = 228.56m,
                            Qty = 108
                        },
                        new
                        {
                            Id = 9,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Generic Fresh Fish",
                            Price = 91.49m,
                            Qty = 583
                        },
                        new
                        {
                            Id = 10,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Rustic Wooden Bacon",
                            Price = 244.89m,
                            Qty = 222
                        },
                        new
                        {
                            Id = 11,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Practical Concrete Fish",
                            Price = 683.86m,
                            Qty = 270
                        },
                        new
                        {
                            Id = 12,
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Generic Granite Fish",
                            Price = 179.55m,
                            Qty = 164
                        },
                        new
                        {
                            Id = 13,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Refined Frozen Computer",
                            Price = 155.03m,
                            Qty = 353
                        },
                        new
                        {
                            Id = 14,
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Small Metal Ball",
                            Price = 836.89m,
                            Qty = 111
                        },
                        new
                        {
                            Id = 15,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Unbranded Fresh Computer",
                            Price = 185.18m,
                            Qty = 773
                        },
                        new
                        {
                            Id = 16,
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Ergonomic Cotton Ball",
                            Price = 528.98m,
                            Qty = 102
                        },
                        new
                        {
                            Id = 17,
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Small Soft Chips",
                            Price = 847.43m,
                            Qty = 571
                        },
                        new
                        {
                            Id = 18,
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Handcrafted Wooden Towels",
                            Price = 248.39m,
                            Qty = 852
                        },
                        new
                        {
                            Id = 19,
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Generic Cotton Chicken",
                            Price = 22.10m,
                            Qty = 642
                        },
                        new
                        {
                            Id = 20,
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Unbranded Steel Computer",
                            Price = 240.18m,
                            Qty = 795
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            CategoryId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 13
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 14
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 15
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 17
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 18
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 19
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 20
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductFitType", b =>
                {
                    b.Property<int>("FitTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("FitTypeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFitType");

                    b.HasData(
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 5
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 6
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 7
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 7
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 8
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 8
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 9
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 9
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 10
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 10
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 11
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 11
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 12
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 13
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 13
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 14
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 14
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 15
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 15
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 16
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 17
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 17
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 18
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 18
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 19
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 19
                        },
                        new
                        {
                            FitTypeId = 1,
                            ProductId = 20
                        },
                        new
                        {
                            FitTypeId = 2,
                            ProductId = 20
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=245127432",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1994112749",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1864630175",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=68483515",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=916806864",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1034402201",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=937019594",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1276857974",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=45806295",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1793794736",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1656729413",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1397638177",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=773749946",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1853340836",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=616022113",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=319183836",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 17,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=492937981",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 18,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1262833996",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 19,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1473042211",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 20,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=159138249",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 21,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1764146059",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 22,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=719942953",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 23,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1985767269",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 24,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1032724115",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 25,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=40648883",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 26,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=720860175",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 27,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=756843148",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 28,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1646216841",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 29,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=430630770",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 30,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=21442986",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 31,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=691062187",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 32,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1254482939",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 33,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=391426044",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 34,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=714086503",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 35,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1507088009",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 36,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=329448207",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 37,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1683503775",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 38,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1698244492",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 39,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=1694065347",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 40,
                            ImageUrl = "https://loremflickr.com/640/480/clothes,fashion,model,shirt/any?lock=615290498",
                            ProductId = 20
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductSize", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 2,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 7,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 7,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 8,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 8,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 9,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 9,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 10,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 10,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 10,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 11,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 11,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 11,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 12,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 12,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 12,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 13,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 13,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 13,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 14,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 14,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 14,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 15,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 15,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 15,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 16,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 16,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 16,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 17,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 17,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 17,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 18,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 18,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 18,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 19,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 19,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 19,
                            SizeId = 3
                        },
                        new
                        {
                            ProductId = 20,
                            SizeId = 1
                        },
                        new
                        {
                            ProductId = 20,
                            SizeId = 2
                        },
                        new
                        {
                            ProductId = 20,
                            SizeId = 3
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "S"
                        },
                        new
                        {
                            Id = 2,
                            Name = "M"
                        },
                        new
                        {
                            Id = 3,
                            Name = "L"
                        },
                        new
                        {
                            Id = 4,
                            Name = "XL"
                        },
                        new
                        {
                            Id = 5,
                            Name = "XXL"
                        });
                });

            modelBuilder.Entity("ShopOnline.API.Entites.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CityId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.CartItem", b =>
                {
                    b.HasOne("ShopOnline.API.Entites.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOnline.API.Entites.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductCategory", b =>
                {
                    b.HasOne("ShopOnline.API.Entites.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOnline.API.Entites.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductFitType", b =>
                {
                    b.HasOne("ShopOnline.API.Entites.FitType", null)
                        .WithMany()
                        .HasForeignKey("FitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOnline.API.Entites.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductImage", b =>
                {
                    b.HasOne("ShopOnline.API.Entites.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.ProductSize", b =>
                {
                    b.HasOne("ShopOnline.API.Entites.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOnline.API.Entites.Size", null)
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopOnline.API.Entites.UserAddress", b =>
                {
                    b.HasOne("ShopOnline.API.Entites.AppUser", "AppUser")
                        .WithMany("Address")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOnline.API.Entites.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("City");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.AppUser", b =>
                {
                    b.Navigation("Address");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ShopOnline.API.Entites.Product", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
